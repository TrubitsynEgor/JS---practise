//? Получение случайного числа в заданном интервале
//* Возвращаемое значение не менее (и может быть равно) min и не более (и не равно) max.
let random = (min, max) => {
	return Math.random() * (max - min) + min;
}
console.log(random(1, 100));

//? Получение случайного целого числа в заданном интервале
//* Итак а что нам нужно сделать для того чтобы числа в рандомайзе были ЦЕЛЫМИ!?
//! Простое, но неправильное решение
//* Самое простое, но неправильное решение – генерировать случайное число от min до max и округлять его:
function randomInteger(min, max) {
	let rand = min + Math.random() * (max - min);
	return Math.round(rand); // Округление до ближайшего целого
}
alert(randomInteger(1, 3));
//! Функция будет работать, но неправильно. Вероятность получить min и max значения в 2 раза меньше, чем любое другое число.
//* Если вы запустите приведённый выше пример, то заметите, что 2 появляется чаще всего.
//*Это происходит потому, что метод Math.round() получает случайные числа из интервала 1..3 и округляет их следующим образом:
число от 1    ... до 1.4999999999  округлится до 1
число от 1.5  ... до 2.4999999999  округлится до 2
число от 2.5  ... до 2.9999999999  округлится до 3
// Теперь становится понятно, что 1 получает в 2 раза меньше значений, чем 2. То же самое с 3.
//todo| Чтобы это работало нужно правильно указать границы интервала! Последний пример (см)


//*Возвращаемое значение не менее min (или следующее целое число, которое больше min, если min не целое) и не более (но не равно) max.
function getRandomInt(min, max) {
	return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается
}

//? Получение случайного целого числа в заданном интервале, включительно
//* Функция getRandomInt() выше включает минимальное значение, но не включает максимальное.
//* Но что если вам нужно, чтобы включалось и минимальное, и максимальное значение? Функция getRandomIntInclusive() решает этот вопрос.
function getRandomIntInclusive(min, max) {
	return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются
}
//! Если нужно еще и округлить переданные через аргументы числа, можно их округлить перед рандомайзом:
min = Math.ceil(min);
max = Math.floor(max);


//? Еще одно решение - правильно указать границы интервала. Чтобы выровнять интервалы, мы можем генерировать числа от 0.5 до 3.5,
//? это позволит добавить необходимые вероятности к min и max:
let random = (min, max) => {
	let rng = min - 0.5 + Math.random() * (max - min + 1);
	return Math.round(rng);
}
console.log(random(1, 5)); //todo| Это решит проблему опичанную в начале!
